{
  "swagger": "2.0",
  "info": {
    "version": "2019-02-01",
    "title": "WebApplicationFirewallManagement",
    "description": "APIs to manage web application firewall rules"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies": {
      "get": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a resource group.",
        "operationId": "Policies_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicyList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Policies in a Resource Group": {
            "$ref": "./examples/WafListPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}": {
      "get": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Retrieve protection policy with specified name within a resource group.",
        "operationId": "Policies_Get",
        "parameters": [
          {
            "$ref": "#/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Policy": {
            "$ref": "./examples/WafPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Create or update policy with specified ruleset name within a resource group.",
        "operationId": "Policies_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "description": "Policy to be created.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "201": {
            "description": "Created. The request has been fulfilled and a new protection policy has been created.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/WafPolicyCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Deletes Policy",
        "operationId": "Policies_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content. The request has been accepted but the policy was not found."
          }
        },
        "x-ms-examples": {
          "Delete protection policy": {
            "$ref": "./examples/WafPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallManagedRuleSets": {
      "get": {
        "tags": [
          "WebApplicationFirewallManagedRuleSets"
        ],
        "description": "Lists all available managed rule sets.",
        "operationId": "ManagedRuleSets_List",
        "parameters": [
          {
            "name": "ruleSetType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by target rule set type."
          },
          {
            "name": "ruleSetVersion",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by target rule set version."
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by target rule set provider."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedRuleSetDefinitionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Policies in a Resource Group": {
            "$ref": "./examples/WafListManagedRuleSets.json"
          }
        }
      }
    }
  },
  "definitions": {
    "WebApplicationFirewallPolicy": {
      "description": "Defines web application firewall policy.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the web application firewall policy.",
          "$ref": "#/definitions/WebApplicationFirewallPolicyProperties"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "WebApplicationFirewallPolicyProperties": {
      "description": "Defines web application firewall policy properties.",
      "properties": {
        "policySettings": {
          "description": "Describes settings for the policy.",
          "$ref": "#/definitions/PolicySettings"
        },
        "customRules": {
          "description": "Describes custom rules inside the policy.",
          "$ref": "#/definitions/CustomRules"
        },
        "managedRules": {
          "description": "Describes managed rules inside the policy.",
          "$ref": "#/definitions/ManagedRuleSetList"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the WebApplicationFirewallPolicy."
        }
      }
    },
    "WebApplicationFirewallPolicyList": {
      "description": "Defines a list of WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WebApplicationFirewallPolicy"
          },
          "description": "List of WebApplicationFirewallPolicies within a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of WebApplicationFirewallPolicy objects if there are any."
        }
      }
    },
    "PolicySettings": {
      "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
      "properties": {
        "enabled": {
          "description": "Describes if the policy is in enabled or disabled state.",
          "type": "boolean"
        },
        "mode": {
          "description": "Describes if it is in detection mode or prevention mode at policy level.",
          "type": "string",
          "enum": [
            "Prevention",
            "Detection"
          ],
          "x-ms-enum": {
            "name": "mode",
            "modelAsString": true
          }
        }
      }
    },
    "CustomRules": {
      "description": "Defines contents of custom rules",
      "properties": {
        "rules": {
          "description": "List of rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomRule"
          }
        }
      }
    },
    "CustomRule": {
      "description": "Defines contents of a web application rule",
      "required": [
        "priority",
        "ruleType",
        "matchConditions",
        "action"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Describes the name of the rule.",
          "maxLength": 128
        },
        "priority": {
          "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
          "type": "integer"
        },
        "enabled": {
          "description": "Describes whether the custom rule should be enabled.",
          "type": "boolean"
        },
        "ruleType": {
          "description": "Describes type of rule.",
          "type": "string",
          "enum": [
            "MatchRule",
            "RateLimitRule"
          ],
          "x-ms-enum": {
            "name": "ruleType",
            "modelAsString": true
          }
        },
        "rateLimitDurationInMinutes": {
          "description": "Defines rate limit duration. Default is 1 minute.",
          "type": "integer"
        },
        "rateLimitThreshold": {
          "description": "Defines rate limit threshold.",
          "type": "integer"
        },
        "matchConditions": {
          "description": "List of match conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchCondition"
          }
        },
        "action": {
          "description": "Describes what action to be applied when rule matches",
          "$ref": "#/definitions/Action"
        }
      }
    },
    "Transform": {
      "description": "Describes what transforms applied before matching",
      "properties": {
        "transformType": {
          "description": "Describes transform type.",
          "type": "string",
          "enum": [
            "Lowercase",
            "Uppercase",
            "Trim",
            "UrlDecode",
            "UrlEncode",
            "RemoveNulls",
            "HtmlEntityDecode"
          ],
          "x-ms-enum": {
            "name": "transform",
            "modelAsString": true
          }
        }
      }
    },
    "MatchVariable": {
      "description": "Match variable from the request.",
      "required": [
        "matchVariableType"
      ],
      "properties": {
        "matchVariableType": {
          "description": "Match variable type.",
          "type": "string",
          "enum": [
            "RemoteAddr",
            "RequestMethod",
            "QueryString",
            "PostArgs",
            "RequestUri",
            "RequestHeaders",
            "RequestBody",
            "RequestUriOrBody",
            "Cookies",
            "RequestBodyXml",
            "RequestBodyJson"
          ],
          "x-ms-enum": {
            "name": "MatchVariableType",
            "modelAsString": true
          }
        },
        "selector": {
          "description": "Selector can used to match a key for QueryString, PostArgs, RequestUri, RequestHeaders or RequestBody.",
          "type": "string"
        }
      }
    },
    "MatchCondition": {
      "description": "Define match conditions",
      "required": [
        "matchVariables",
        "operator",
        "matchValues"
      ],
      "properties": {
        "matchVariables": {
          "description": "List of match variables to compare against.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchVariable"
          }
        },
        "operator": {
          "description": "Describes operator to be matched",
          "type": "string",
          "enum": [
            "Any",
            "IPMatch",
            "GeoMatch",
            "Equal",
            "Contains",
            "LessThan",
            "GreaterThan",
            "LessThanOrEqual",
            "GreaterThanOrEqual",
            "BeginsWith",
            "EndsWith",
            "RegEx"
          ],
          "x-ms-enum": {
            "name": "operator",
            "modelAsString": true
          }
        },
        "negateCondition": {
          "description": "Describes if the result of this condition should be negated.",
          "type": "boolean"
        },
        "matchValues": {
          "description": "List of possible match values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "description": "List of transforms.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transform"
          }
        }
      }
    },
    "ManagedRuleSetList": {
      "description": "Defines a list of managed rule sets.",
      "properties": {
        "ruleSets": {
          "description": "List of rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSet"
          }
        }
      }
    },
    "ManagedRuleSet": {
      "type": "object",
      "description": "Defines a managed rule set.",
      "required": [
        "ruleSetType",
        "ruleSetVersion"
      ],
      "properties": {
        "priority": {
          "description": "Describes priority order of the rule set. Rule sets with a lower value will be evaluated before rules with a higher value.",
          "type": "integer"
        },
        "ruleSetType": {
          "description": "Defines the rule set type to use.",
          "type": "string"
        },
        "ruleSetVersion": {
          "description": "Defines the version of the rule set to use.",
          "type": "string"
        },
        "overrides": {
          "description": "Defines the rule overrides to apply to the rule set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleOverride"
          }
        }
      }
    },
    "ManagedRuleOverride": {
      "description": "Defines a managed rule override setting.",
      "required": [
        "ruleName"
      ],
      "properties": {
        "ruleName": {
          "description": "Describes the managed rule to override.",
          "type": "string"
        },
        "enabled": {
          "description": "Describes whether the managed rule should be enabled.",
          "type": "boolean"
        },
        "action": {
          "description": "Describes the override action to be applied when rule matches.",
          "$ref": "#/definitions/Action"
        }
      }
    },
    "ManagedRuleSetDefinitionList": {
      "description": "Defines a list of managed rule set definitions.",
      "properties": {
        "ruleSets": {
          "description": "List of managed rule set definitions.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSetDefinition"
          }
        }
      }
    },
    "ManagedRuleSetDefinition": {
      "description": "Defines a managed rule set definition.",
      "properties": {
        "ruleSetType": {
          "description": "Defines the type of the managed rule set.",
          "readOnly": true,
          "type": "string"
        },
        "ruleSetVersion": {
          "description": "Defines the version of the managed rule set.",
          "readOnly": true,
          "type": "string"
        },
        "provider": {
          "description": "Defines the provider of the managed rule set.",
          "readOnly": true,
          "type": "string"
        },
        "ruleDefinitions": {
          "description": "Defines the provider of the managed rule set.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleDefinition"
          }
        }
      }
    },
    "ManagedRuleDefinition": {
      "description": "Defines a managed rule definition.",
      "properties": {
        "name": {
          "description": "Defines the name of the managed rule.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Describes the functionality of the managed rule.",
          "readOnly": true,
          "type": "string"
        },
        "enabled": {
          "description": "Describes if the rule is in enabled or disabled state by default.",
          "type": "boolean"
        },
        "priority": {
          "description": "Describes the priority of the managed rule. Rule sets with a lower value will be evaluated before rules with a higher value.",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "Action": {
      "description": "Defines the action to take on rule match.",
      "required": [
        "actionType"
      ],
      "properties": {
        "actionType": {
          "description": "Describes type of action.",
          "type": "string",
          "enum": [
            "Allow",
            "Block",
            "Log",
            "Redirect"
          ],
          "x-ms-enum": {
            "name": "action",
            "modelAsString": true
          }
        },
        "redirectUrl": {
          "description": "If action type is redirect, this field represents URL to be re-directed.",
          "type": "string"
        },
        "customBlockResponseStatusCode": {
          "description": "If the action type is block, customer can override the response status code.",
          "type": "integer"
        },
        "customBlockResponseBody": {
          "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
          "type": "string",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error reponse indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "PolicyNameParameter": {
      "name": "policyName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 128,
      "description": "The name of the WebApplicationFirewallPolicy."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method",
      "description": "Name of the Resource group within the Azure subscription."
    }
  }
}